constellation Luna {
	form {
		let left = wingit()
		let right = wingit()
		let rotMod = sin(time % 5000 / 5000 * 3.1415 * 2) * 0.5 + 0.5
		let maxAngle = -85
		rotate(left, center: <0, 0, 0>, angle: rotMod * maxAngle)
		rotate(right, center: <0, 0, 0>, angle: 180 - rotMod * maxAngle)
		rotate(left, center: <0, 0, 0>, axis: <1, 0, 0>, angle: -40)
		rotate(right, center: <0, 0, 0>, axis: <1, 0, 0>, angle: -40)
		rotate(left, center: <0, 0, 0>, axis: <0, 1, 0>, angle: -45)
		rotate(right, center: <0, 0, 0>, axis: <0, 1, 0>, angle: -45)
	}
	
	func wingit(): GroupIdentifier {
		let wingRad = 0.04
		let wingCol = 1
		let accentCol = 2
		let topWingPoints = [<0, 0>, <6, 1>, <8, 0>, <6.5, -2>, <4, -4>, <0, 0>]
		let bottomWingPoints = [<0, 0>, <1, 0>, <5, -4>, <3.5, -5.35>, <2.4, -6>, <2.75, -8>, <2.5, -8.5>, <2, -9>, <1.5, -6>, <0.2, -4>, <0, 0>]
		let wings = group {
			group {
				line(points: topWingPoints, radius: wingRad, color: wingCol, curve: true)
				group {
					default line(radius: 0.05, color: accentCol)
					circle(<4.4, -0.5>, 0.625)
					arc(<3.8, -0.1>, 0.85, 0.78, 0.02)
				}
			}
			group {
				default line(radius: 0.05, color: accentCol)
				line(points: bottomWingPoints, radius: wingRad, color: wingCol, curve: true)
				circle(<1.5, -3.5>, 0.5)
				arc(<1.6, -3.8>, 0.53, 0.12, 0.48)
			}
		}
		return wings
	}
}